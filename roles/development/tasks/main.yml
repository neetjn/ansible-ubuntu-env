- set_fact:
    gcc_script: "https://gist.githubusercontent.com/neetjn/7c28db8a7a31766f0e329590e4de213f/raw/973d9712c9323319bb99519bc43b34a2d778daa4/gcc7.sh"

- name: Check if ssh key exists
  stat:
    path: "{{ssh_directory}}/id_rsa"
  register: git_ssh_key_exists

- name: Generate ssh key
  shell: |
    ssh-keygen -t rsa -C "{{git_ssh_key_user}}" -f "{{ssh_directory}}/id_rsa" -N ''
  become: no
  when: git_ssh_key_exists.stat.exists == False

- name: Install CMake
  apt:
    name: cmake
    state: present

- name: Install Clang
  apt:
    name: clang
    state: present

- name: Install gcc 7
  shell: "curl {{gcc_script}} | sh"

- name: Increase file watchers
  lineinfile:
    dest: /etc/sysctl.conf
    line: 'fs.inotify.max_user_watches=524288'
    state: present

- name: Add deadsnakes ppa for python utilities
  apt_repository:
    validate_certs: no
    repo: ppa:deadsnakes/ppa
    state: present

- name: Install python (2.7)
  apt:
    name: python2.7
    state: present

- name: Install pip for python 2
  shell: curl -s https://bootstrap.pypa.io/pip/2.7/get-pip.py | sudo python2.7

- name: Install pip for python 3
  apt:
    name: python3-pip
    state: present

- name: Upgrade pip and pip3
  shell: pip2 install --upgrade pip && pip3 install --upgrade pip

- name: Install Python (2.7) development libs
  apt:
    name: python2.7-dev
    state: present

- name: Install Python (3.6) development libs
  apt:
    name: python3.6-dev
    state: present

- name: Install Python 3.7
  apt:
    name: python3.7
    state: present

- name: Install Python (3.7) development libs
  apt:
    name: python3.7-dev
    state: present

- name: Install pylint cli and tools
  pip:
    name: pylint
    state: present

- name: Install pep8
  pip:
    name: pep8
    state: present

- name: Install flake8
  pip:
    name: flake8
    state: present

- name: Install httpie cli
  pip:
    name: httpie
    state: present

- name: Install SAWS
  pip:
    name: saws
    state: present

- name: Check Docker Installed
  shell: which docker
  register: docker_check
  ignore_errors: yes

# will install the latest version of docker
- name: Install Docker
  shell: curl https://get.docker.com/ | sh
  when: docker_check.rc == 1

# https://github.com/ansible/ansible/issues/20492#issuecomment-274081101
- name: Install docker compose
  pip:
    name: docker-compose
    state: present

- name: Install deno
  shell: curl -fsSL https://deno.land/x/install/install.sh | sh
  become: no

- name: Install npm
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - libssl-dev
    - node-gyp
    - npm

- name: Install n node.js version manager
  npm:
    name: n
    global: yes
    state: present

- name: Install node.js 10 stable
  shell: n latest

- name: Install coffee-script
  npm:
    name: coffee-script
    global: yes
    state: present

- name: Install webpack
  npm:
    name: webpack
    global: yes
    state: present

- name: Install firebase tools
  npm:
    name: firebase-tools
    global: yes
    state: present

- name: Install ruby
  apt:
    name: ruby
    state: present

- name: Install ruby development tools
  apt:
    name: ruby-dev
    state: present

- name: Install rails
  apt:
    name: rails
    state: present

- name: Install travis-cli
  gem:
    name: travis-cli
    state: present

- name: Install mycli
  pip:
    name: mycli
    state: present

- name: Install postgres development libs
  apt:
    name: libpq-dev
    state: present

- name: Install pgcli
  pip:
    name: pgcli
    state: present

- name: Install Go
  shell: snap install go --classic

- name: Install Rust
  shell: curl https://sh.rustup.rs -sSf | sh -s -- -y
  become: no

- name: Install Cargo
  apt:
    name: cargo
    state: present

- name: Add Dart Keys
  shell: |
    sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
    sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'

- name: Install Dart
  apt:
    name: dart
    state: present
    update_cache: yes

- name: Install flutter
  shell: snap install flutter --classic

- name: Add php Keys
  shell: LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php

- name: Install php 7.1.*
  apt:
    name: php7.1
    state: present
    update_cache: yes

- name: Install php 7.1.* ext-zip (for laravel)
  apt:
    name: php7.1-zip
    state: present

- name: Install php 7.1.* mbstring (for laravel)
  apt:
    name: php7.1-mbstring
    state: present

- name: Install php 7.1.* ext-dom (for laravel)
  apt:
    name: php7.1-dom
    state: present

- name: Install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# check if mongodb-compass installed
- name: Check mongodb compass Installed
  shell: which mongodb-compass
  register: compass_check
  ignore_errors: yes

- name: Install mongodb compass
  shell: |
    wget -O /tmp/compass.deb https://downloads.mongodb.com/compass/mongodb-compass_1.21.2_amd64.deb
    dpkg --install /tmp/compass.deb
    rm -rf /tmp/compass.deb
  when: compass_check.rc == 1

- name: Install datagrip
  shell: snap install datagrip --classic

- name: Install insomnia rest tool
  shell: snap install insomnia

- name: Install Code
  shell: snap install code --classic

# assumes script exists - see common tasks for cloning dotfiles
- name: Install Code Extensions
  shell: sh "{{home_directory}}"/.tools/install-code-extensions.sh
  become: no
  ignore_errors: yes

- name: Add vim8 ppa
  apt_repository:
    validate_certs: no
    repo: ppa:jonathonf/vim
    state: present
    update_cache: yes

- name: Fix missing dependencies (hit on first run with Ubuntu 20.04 lts)
  shell: apt-get install -f -y

- name: Install vim
  apt:
    name: vim
    state: present

- name: Install gvim
  apt:
    name: vim-gnome
    state: present

- name: Install vimplug for vim plugins
  shell: curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  become: no
  ignore_errors: yes

- name: Install vim plugins
  shell: vim +PlugInstall +qall
  become: no
  ignore_errors: yes

- name: Install editorconfig core
  apt:
    name: editorconfig
    state: present

- name: Install ycmd server
  apt:
    name: ycmd
    state: present

- name: Add openjdk ppa for java
  apt_repository:
    validate_certs: no
    repo: ppa:openjdk-r/ppa
    state: present

- name: Install Java 8 JDK
  apt:
    name: openjdk-8-jdk
    state: present

- name: Install Gradle + Groovy
  apt:
    name: gradle
    state: present
